%h2 Vos données

%p
  Fichier train :
  = link_to @work.source.label, source_path(@work.source)

%p
  Fichier application :
  = link_to @work.target_source.label, source_path(@work.target_source)


%table
  %caption Le fichier retraité comporte :
  %thead
    %tr
      %th
      %th= @work.source.label
      %th= @work.target_source.label
  %tbody
    %tr
      %th Nombre d'enregistrements (lignes)
      %td FIXME
      %td FIXME
    %tr
      %th Nombre de critères (colonnes)
      %td FIXME
      %td FIXME

%p
  Les données utilisées pour l'analyse sont :

%ul
  %li FIXME name + type
  %li FIXME
  %li FIXME


%h2 L'analyse

- if @work.results['distribution']
  .work-results-distribution
    %h3 Répartition des effectifs

    %p
      Borne mini :
      = @work.results['min']
      %br
      Borne maxi :
      = @work.results['max']
      %br
      Moyenne
      = @work.results['mean']


- if @work.results['means']
  %h3 Calculs des taux moyens par tranche d'effectifs

  %p
    Votre fichier a été découpé en 10 déciles, c'est à dire 10 groupes
    contenant chacun
    FIXME
    enregistrements sur les
    FIXME
    enregistrements que comporte votre fichier
    = @work.target_source.label

  %ul
    %li
      Le 1er décile correspond aux 10 % d'enregistrements de votre fichier
      = @work.target_source.label
      ayant la plus faible probabilité d'atteindre votre objectif.
    %li
      Le 10ème décile correspond aux 10 % d'enregistrements ayant la plus forte
      probabilité d'atteindre votre objectif.

  %table
    %thead
      %tr
        %th Décile
        %th Taux moyen
    %tbody
      - @work.results['means'].each_with_index do |e, i|
        %tr
          %th= "De #{i * 10} % à #{(i + 1) * 10} %"
          %td= e


- if @work.results['means_acc']
  %h3 Projection du taux

  %table
    %thead
      %tr
        %th Décile
        %th Taux projeté
    %tbody
      - @work.results['means_acc'].each_with_index do |e, i|
        %tr
          %th= "De #{(9 - i) * 10} % à #{((9 - i) + 1) * 10} %"
          %td= e


%h2 Évaluation financière de l'optimisation


%h2 Validation du modèle


:javascript
  work_results = JSON.parse('#{j @work.results.to_json}')

= javascript_include_tag 'works_show'
